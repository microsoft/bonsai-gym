EpisodeLog_CL //Click Run to see logs and Share to export as csv
| where BrainName_s == "dssat_fert" and BrainVersion_d == 12
    and TimeGenerated > ago(30d)
| join kind=inner (
    IterationLog_CL
    | sort by Timestamp_t desc
    )
    on EpisodeId_g
| project
    AssessmentName = AssessmentName_s,
    EpisodeId = EpisodeId_g,
    IterationIndex = IterationIndex_d,
    Timestamp = Timestamp_t,
    SimConfig = parse_json(SimConfig_s),
    SimState = parse_json(SimState_s),
    SimAction = parse_json(SimAction_s),
    Reward = Reward_d,
    CumulativeReward = CumulativeReward_d,
    GoalMetrics = parse_json(GoalMetrics_s),
    Terminal = Terminal_b,
    FinishReason = FinishReason_s,
    LessonIndex = LessonIndex_d,
    EpisodeType = EpisodeType_s
| order by EpisodeId asc, IterationIndex asc
| extend Yield=round(todouble(SimState.grnwt),0)
| extend Cleach=round(todouble(SimState.cleach),0)
| extend Fertilization=round(todouble(SimState.cumsumfert))
| summarize round(max(Yield),0), round(max(Fertilization),0), round(max(Cleach),0) by EpisodeId
| summarize round(avg(max_Yield),0), round(stdev(max_Yield),0), round(avg(max_Fertilization),0), round(stdev(max_Fertilization),0),round(avg(max_Cleach),0), round(stdev(max_Cleach),0)
| extend PerToExpertYield_3686 = round(avg_max_Yield / 3686 * 100,0)
| extend PerToExpertFert_116 = round(avg_max_Fertilization / 116 * 100,0)
| extend PerToExpertCleach_18 = round(avg_max_Cleach / 18 * 100,0)

